"use strict";(self.webpackChunknaptha_docs=self.webpackChunknaptha_docs||[]).push([[8887],{9103:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>c,frontMatter:()=>a,metadata:()=>o,toc:()=>d});var s=n(4848),i=n(8453);const a={},r="Multi-Agent Chat",o={id:"Examples/MultiplayerChat",title:"Multi-Agent Chat",description:"Using the Naptha SDK and node infrastructure, we implemented a multiplayer chat app where each of the conversational agents runs on a different node using various LLMs.",source:"@site/docs/Examples/MultiplayerChat.md",sourceDirName:"Examples",slug:"/Examples/MultiplayerChat",permalink:"/Examples/MultiplayerChat",draft:!1,unlisted:!1,editUrl:"https://github.com/NapthaAI/docs/tree/main/docs/Examples/MultiplayerChat.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Image2Image",permalink:"/Examples/Image2Image"},next:{title:"BabyAGI",permalink:"/Examples/BabyAGI"}},l={},d=[{value:"Prerequisites",id:"prerequisites",level:2},{value:"Modules Used",id:"modules-used",level:2},{value:"Run",id:"run",level:2},{value:"Configuration Breakdown:",id:"configuration-breakdown",level:3},{value:"Example Conversation Starters",id:"example-conversation-starters",level:2}];function h(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"multi-agent-chat",children:"Multi-Agent Chat"})}),"\n",(0,s.jsx)(t.p,{children:"Using the Naptha SDK and node infrastructure, we implemented a multiplayer chat app where each of the conversational agents runs on a different node using various LLMs."}),"\n",(0,s.jsx)(t.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Make sure you have the ",(0,s.jsx)(t.a,{href:"/GettingStarted/Installation",children:"Naptha SDK installed"}),"."]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"modules-used",children:"Modules Used"}),"\n",(0,s.jsx)(t.p,{children:"This multi-agent, multi-node workflow is made of the following components, which you can find on the Naptha GitHub:"}),"\n",(0,s.jsxs)(t.table,{children:[(0,s.jsx)(t.thead,{children:(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.th,{children:"Module"}),(0,s.jsx)(t.th,{children:"Description"}),(0,s.jsx)(t.th,{children:"Repository"})]})}),(0,s.jsxs)(t.tbody,{children:[(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Multi-Agent Chat Orchestrator"}),(0,s.jsx)(t.td,{children:"Multi-agent chat across a network of multiple nodes."}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/NapthaAI/multiagent_chat",children:"GitHub"})})]}),(0,s.jsxs)(t.tr,{children:[(0,s.jsx)(t.td,{children:"Simple Chat Agent"}),(0,s.jsx)(t.td,{children:"Agent for running simple chat with LLMs."}),(0,s.jsx)(t.td,{children:(0,s.jsx)(t.a,{href:"https://github.com/NapthaAI/simple_chat_agent",children:"GitHub"})})]})]})]}),"\n",(0,s.jsx)(t.h2,{id:"run",children:"Run"}),"\n",(0,s.jsx)(t.p,{children:"You can run it using the Naptha SDK on hosted nodes using the following command:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:'naptha run orchestrator:multiagent_chat -p "prompt=\'i would like to count up to ten, one number at a time. ill start. one.\'" --agent_nodes "node.naptha.ai,node1.naptha.ai" --kb_nodes "node.naptha.ai"\n'})}),"\n",(0,s.jsx)(t.p,{children:"Or on local nodes:"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-bash",children:'naptha run orchestrator:multiagent_chat -p "prompt=\'i would like to count up to ten, one number at a time. ill start. one.\'" --agent_nodes "localhost,localhost" --kb_nodes "localhost"\n'})}),"\n",(0,s.jsx)(t.h3,{id:"configuration-breakdown",children:"Configuration Breakdown:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"prompt"}),": Your initial message to start the conversation"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"agent_nodes"}),": Comma-separated list of agent node URLs where chat agents will run"]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.code,{children:"kb_nodes"}),": Comma-separated list of knowledge base node URLs for storing chat history"]}),"\n"]}),"\n",(0,s.jsxs)(t.admonition,{title:"Node Distribution",type:"note",children:[(0,s.jsx)(t.p,{children:"This runs the flow across multiple nodes:"}),(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["One orchestrator node (set as ",(0,s.jsx)(t.code,{children:"NODE_URL"})," in your .env file) that coordinates the chat"]}),"\n",(0,s.jsxs)(t.li,{children:["Two agent nodes (specified via ",(0,s.jsx)(t.code,{children:"--agent_nodes"}),") that run the chat agents"]}),"\n",(0,s.jsxs)(t.li,{children:["One knowledge base node (specified via ",(0,s.jsx)(t.code,{children:"--kb_nodes"}),") that stores the chat history"]}),"\n"]})]}),"\n",(0,s.jsx)(t.h2,{id:"example-conversation-starters",children:"Example Conversation Starters"}),"\n",(0,s.jsx)(t.p,{children:"Try these prompts to see different interaction patterns:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Counting game: ",(0,s.jsx)(t.code,{children:'"I would like to count up to ten, one number at a time. ill start. one."'})]}),"\n",(0,s.jsxs)(t.li,{children:["Story creation: ",(0,s.jsx)(t.code,{children:"\"Let's create a story together. I'll start: Once upon a time...\""})]}),"\n",(0,s.jsxs)(t.li,{children:["Word association: ",(0,s.jsx)(t.code,{children:"\"Let's play word association. I'll say a word, and you respond with related words. Starting with: Ocean\""})]}),"\n"]}),"\n",(0,s.jsx)(t.admonition,{type:"tip",children:(0,s.jsx)(t.p,{children:"Start with simple interactions to understand the flow, then try more complex conversations as you get familiar with the system."})}),"\n",(0,s.jsx)(t.admonition,{type:"info",children:(0,s.jsx)(t.p,{children:"Each agent in this chat system runs independently on its own node, demonstrating true distributed AI interaction!"})})]})}function c(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>o});var s=n(6540);const i={},a=s.createContext(i);function r(e){const t=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:t},e.children)}}}]);