"use strict";(self.webpackChunknaptha_docs=self.webpackChunknaptha_docs||[]).push([[696],{7862:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>h,contentTitle:()=>r,default:()=>c,frontMatter:()=>i,metadata:()=>o,toc:()=>d});var n=a(4848),s=a(8453);const i={},r="BabyAGI",o={id:"Examples/BabyAGI",title:"BabyAGI",description:"BabyAGI was one of the first multi-agent systems that used LLMs for performing useful tasks. It makes use of several different types of agents, such as a task creation agent and an execution agent, as shown in the diagram below.",source:"@site/docs/Examples/BabyAGI.md",sourceDirName:"Examples",slug:"/Examples/BabyAGI",permalink:"/Examples/BabyAGI",draft:!1,unlisted:!1,editUrl:"https://github.com/NapthaAI/docs/tree/main/docs/Examples/BabyAGI.md",tags:[],version:"current",frontMatter:{},sidebar:"docs",previous:{title:"Multi-Agent Chat",permalink:"/Examples/MultiplayerChat"},next:{title:"Build Your Own Agent",permalink:"/Examples/BuildAgent"}},h={},d=[{value:"Prerequisities",id:"prerequisities",level:2},{value:"Modules Used",id:"modules-used",level:2},{value:"Run",id:"run",level:2},{value:"Configuration Breakdown:",id:"configuration-breakdown",level:3}];function l(e){const t={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"babyagi",children:"BabyAGI"})}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.a,{href:"https://github.com/yoheinakajima/babyagi",children:"BabyAGI"})," was one of the first multi-agent systems that used LLMs for performing useful tasks. It makes use of several different types of agents, such as a task creation agent and an execution agent, as shown in the diagram below."]}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.img,{alt:"BabyAGI Architecture",src:a(5017).A+"",width:"2978",height:"2205"})}),"\n",(0,n.jsxs)(t.p,{children:["However, here's Yohei (creator of BabyAGI) admitting that ",(0,n.jsx)(t.a,{href:"https://x.com/yoheinakajima/status/1781183534998380576",children:"BabyAGI isn't a true multi-agent system"})," since the agents use the same LLM and code base, and run on the same server."]}),"\n",(0,n.jsxs)(t.p,{children:["Using the Naptha SDK and node infrastructure, we implemented BabyAGI as a true multi-agent system for the first time. You can check out a demo video of this multi-node workflow ",(0,n.jsx)(t.a,{href:"https://www.youtube.com/watch?v=nzV04zOA0f0",children:"here"}),"."]}),"\n",(0,n.jsx)("iframe",{width:"560",height:"315",src:"https://www.youtube.com/embed/nzV04zOA0f0",title:"BabyAGI Multi-Node Demo",frameborder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture",allowfullscreen:!0}),"\n",(0,n.jsx)(t.h2,{id:"prerequisities",children:"Prerequisities"}),"\n",(0,n.jsxs)(t.p,{children:["Make sure you have the Naptha SDK ",(0,n.jsx)(t.a,{href:"/GettingStarted/Installation",children:"installed"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"modules-used",children:"Modules Used"}),"\n",(0,n.jsx)(t.p,{children:"The BabyAGI multi-node workflow is made up of the following components, which you can find on the Naptha GitHub:"}),"\n",(0,n.jsxs)(t.table,{children:[(0,n.jsx)(t.thead,{children:(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.th,{children:"Module"}),(0,n.jsx)(t.th,{children:"Description"}),(0,n.jsx)(t.th,{children:"Repository"})]})}),(0,n.jsxs)(t.tbody,{children:[(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Orchestrator Flow"}),(0,n.jsx)(t.td,{children:"Multi-agent task solving across a network of multiple nodes."}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"https://github.com/NapthaAI/babyagi",children:"GitHub"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Task Initiator"}),(0,n.jsx)(t.td,{children:"BabyAGI task initiator agent."}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"https://github.com/NapthaAI/babyagi_task_initiator",children:"GitHub"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Task Executor"}),(0,n.jsx)(t.td,{children:"BabyAGI task executor agent."}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"https://github.com/NapthaAI/babyagi_task_executor",children:"GitHub"})})]}),(0,n.jsxs)(t.tr,{children:[(0,n.jsx)(t.td,{children:"Task Finalizer"}),(0,n.jsx)(t.td,{children:"BabyAGI task finalizer agent."}),(0,n.jsx)(t.td,{children:(0,n.jsx)(t.a,{href:"https://github.com/NapthaAI/babyagi_task_finalizer",children:"GitHub"})})]})]})]}),"\n",(0,n.jsx)(t.h2,{id:"run",children:"Run"}),"\n",(0,n.jsx)(t.p,{children:"You can run the BabyAGI flow from the SDK using the following command:"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-bash",children:'naptha run babyagi -p "objective=\'Research the history of football\'" --worker_nodes "http://node.naptha.ai:7001,http://node1.naptha.ai:7001"\n'})}),"\n",(0,n.jsx)(t.h3,{id:"configuration-breakdown",children:"Configuration Breakdown:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"objective"}),": Your desired research or task objective"]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.code,{children:"worker_nodes"}),": Comma-separated list of worker node URLs"]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:["This runs the flow across three nodes in total - one orchestrator node (whichever you have set as the ",(0,n.jsx)(t.code,{children:"NODE_URL"})," in the .env file of the Naptha SDK),\nand two worker nodes (that you have set using the ",(0,n.jsx)(t.code,{children:"--worker_nodes"})," flag)."]}),"\n",(0,n.jsx)(t.admonition,{type:"tip",children:(0,n.jsx)(t.p,{children:"Start with simple objectives to understand the workflow, then gradually increase complexity as you become familiar with the system."})})]})}function c(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},5017:(e,t,a)=>{a.d(t,{A:()=>n});const n=a.p+"assets/images/babyagi-0afa72fd9fa9dfcff51fd279c0a4f718.png"},8453:(e,t,a)=>{a.d(t,{R:()=>r,x:()=>o});var n=a(6540);const s={},i=n.createContext(s);function r(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);