"use strict";(self.webpackChunknaptha_docs=self.webpackChunknaptha_docs||[]).push([[945],{3816:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>c,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var i=t(4848),a=t(8453);const s={sidebar_label:"Your First Agent Module"},o="A Quick Guide to Creating and Publishing Your First Agent Module on Naptha",l={id:"Tutorials/module-guide",title:"A Quick Guide to Creating and Publishing Your First Agent Module on Naptha",description:"While other projects allow you to deploy agents on the cloud, Naptha allows you to create and deploy them on an entire Web built especially for agents. Here, they can interact with other agents, tools, and environments (such as group chats, auctions, and virtual worlds), running on top of a decentralized network of devices.",source:"@site/docs/Tutorials/module-guide.md",sourceDirName:"Tutorials",slug:"/Tutorials/module-guide",permalink:"/Tutorials/module-guide",draft:!1,unlisted:!1,editUrl:"https://github.com/NapthaAI/docs/tree/main/docs/Tutorials/module-guide.md",tags:[],version:"current",frontMatter:{sidebar_label:"Your First Agent Module"},sidebar:"docs",previous:{title:"Naptha CLI Usage",permalink:"/GettingStarted/NapthaCLI"},next:{title:"Hello World",permalink:"/Examples/HelloWorld"}},r={},d=[{value:"What is an Agent Module?",id:"what-is-an-agent-module",level:2},{value:"Prerequisites",id:"prerequisites",level:2},{value:"Getting Started",id:"getting-started",level:2},{value:"Create a copy of the .env file:",id:"create-a-copy-of-the-env-file",level:4},{value:"Install the dependencies:",id:"install-the-dependencies",level:4},{value:"Building Your Agent - Making Changes to the Code",id:"building-your-agent---making-changes-to-the-code",level:2},{value:"Testing",id:"testing",level:2},{value:"Packaging Your Agent",id:"packaging-your-agent",level:2},{value:"Publishing to Naptha Hub",id:"publishing-to-naptha-hub",level:2},{value:"1. Upload to IPFS",id:"1-upload-to-ipfs",level:3},{value:"2. Register Your Agent",id:"2-register-your-agent",level:3},{value:"Verifying Your Publication",id:"verifying-your-publication",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Next Steps",id:"next-steps",level:2}];function h(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",mdxAdmonitionTitle:"mdxAdmonitionTitle",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"a-quick-guide-to-creating-and-publishing-your-first-agent-module-on-naptha",children:"A Quick Guide to Creating and Publishing Your First Agent Module on Naptha"})}),"\n",(0,i.jsx)("a",{href:"https://colab.research.google.com/drive/1HwrR49T5c1CQDKprYPYSVHeUJCA5uf5V?usp=sharing",target:"_parent",children:(0,i.jsx)("img",{src:"https://colab.research.google.com/assets/colab-badge.svg",alt:"Open In Colab"})}),"\n",(0,i.jsx)(n.p,{children:"While other projects allow you to deploy agents on the cloud, Naptha allows you to create and deploy them on an entire Web built especially for agents. Here, they can interact with other agents, tools, and environments (such as group chats, auctions, and virtual worlds), running on top of a decentralized network of devices."}),"\n",(0,i.jsx)(n.p,{children:"In this guide, we'll walk through creating and publishing your first Naptha agent module, from initial setup to deployment. Whether you're an AI researcher, developer, or enthusiast, you'll be able to contribute to the Naptha ecosystem in no time."}),"\n",(0,i.jsx)(n.h2,{id:"what-is-an-agent-module",children:"What is an Agent Module?"}),"\n",(0,i.jsx)(n.p,{children:"Naptha Modules are the building blocks of multi-agent applications on, which enable them to run across multiple nodes. There are currently five types of Modules:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Agent Modules"})," e.g. Chat Agents, Task-solving Agents, ReAct Agents, etc."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Agent Orchestrator Modules"})," e.g. Organizations of Coding Agents, Social Simulations, etc."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Environment Modules"})," e.g. Group Chats (like WhatsApp for Agents), Information Board (Reddit for Agents), Auctions (eBay for Agents), etc."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Tool Modules"})," e.g. Web Search, Python Code Execution, etc."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Persona Modules"})," e.g. Social Personas generated from exported Twitter data, or synthetically-generated Market Personas"]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Modules are stored on GitHub, HuggingFace, IPFS, or DockerHub with the URL registered on the Naptha Hub."}),"\n",(0,i.jsx)(n.h2,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsx)(n.p,{children:"Before we dive in, make sure you have:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Python 3.8 or higher installed"}),"\n",(0,i.jsxs)(n.li,{children:["The Naptha SDK installed (",(0,i.jsx)(n.code,{children:"pip install naptha-sdk"}),")"]}),"\n",(0,i.jsx)(n.li,{children:"Basic familiarity with Python packaging"}),"\n",(0,i.jsx)(n.li,{children:"Poetry installed (recommended for dependency management)"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"getting-started",children:"Getting Started"}),"\n",(0,i.jsxs)(n.p,{children:["The journey of creating your first Naptha agent begins with our ",(0,i.jsx)(n.a,{href:"https://github.com/NapthaAI/module_template/",children:"module template"}),". This template provides the essential structure and boilerplate code you need to get started quickly. To get started, clone the repository and install the dependencies:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"git clone https://github.com/NapthaAI/module_template\ncd module_template\n"})}),"\n",(0,i.jsx)(n.h4,{id:"create-a-copy-of-the-env-file",children:"Create a copy of the .env file:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"cp .env.example .env\n"})}),"\n",(0,i.jsx)(n.h4,{id:"install-the-dependencies",children:"Install the dependencies:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"poetry install\n"})}),"\n",(0,i.jsx)(n.h2,{id:"building-your-agent---making-changes-to-the-code",children:"Building Your Agent - Making Changes to the Code"}),"\n",(0,i.jsxs)(n.p,{children:["The core agent's module functionality lives in the main ",(0,i.jsx)(n.a,{href:"https://github.com/NapthaAI/module_template/blob/main/module_template/run.py",children:(0,i.jsx)(n.code,{children:"run.py"})})," file."]}),"\n",(0,i.jsx)(n.p,{children:"Some popular agent modules on Naptha include:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/NapthaAI/simple_chat_agent/blob/main/simple_chat_agent/run.py",children:"simple_chat_agent"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/NapthaAI/image2image/blob/main/image_to_image/run.py",children:"image2image"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.a,{href:"https://github.com/NapthaAI/generate_image/blob/main/generate_image/run.py",children:"generate_image"})}),"\n"]}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsx)(n.p,{children:"You can also find a list of agent modules on Naptha:"}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["with the Naptha SDK via the CLI ",(0,i.jsx)(n.code,{children:"naptha agents"})," or the Client ",(0,i.jsx)(n.code,{children:"await naptha.hub.list_agents()"})]}),"\n",(0,i.jsxs)(n.li,{children:["on ",(0,i.jsx)(n.a,{href:"https://github.com/NapthaAI",children:"Naptha's Github homepage"})]}),"\n"]})]}),"\n",(0,i.jsx)(n.p,{children:"For example, here's that of the simple_chat_agent:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-python",children:'#!/usr/bin/env python\nfrom dotenv import load_dotenv\nimport json\nfrom litellm import completion\nfrom naptha_sdk.schemas import AgentDeployment, AgentRunInput\nimport os\nfrom simple_chat_agent.schemas import InputSchema, SystemPromptSchema\nfrom simple_chat_agent.utils import get_logger\n\nload_dotenv()\n\nlogger = get_logger(__name__)\n\nclass SimpleChatAgent:\n\n    def __init__(self, agent_deployment: AgentDeployment):\n        self.agent_deployment = agent_deployment\n        self.system_prompt = SystemPromptSchema(role=agent_deployment.agent_config.system_prompt["role"], persona=agent_deployment.agent_config.persona_module["data"])\n\n    def chat(self, inputs: InputSchema):\n        if isinstance(inputs.tool_input_data, list):\n            messages = [msg for msg in inputs.tool_input_data if msg["role"] != "system"]\n        elif isinstance(inputs.tool_input_data, str):\n            messages = [{"role": "user", "content": inputs.tool_input_data}]\n        messages.insert(0, {"role": "system", "content": json.dumps(self.agent_deployment.agent_config.system_prompt)})\n\n        api_key = None if self.agent_deployment.agent_config.llm_config.client == "ollama" else ("EMPTY" if self.agent_deployment.agent_config.llm_config.client == "vllm" else os.getenv("OPENAI_API_KEY"))\n\n        response = completion(\n            model=self.agent_deployment.agent_config.llm_config.model,\n            messages=messages,\n            temperature=self.agent_deployment.agent_config.llm_config.temperature,\n            max_tokens=self.agent_deployment.agent_config.llm_config.max_tokens,\n            api_base=self.agent_deployment.agent_config.llm_config.api_base,\n            api_key=api_key\n        )\n\n        response = response.choices[0].message.content\n        logger.info(f"Response: {response}")\n\n        messages.append({"role": "assistant", "content": response})\n\n        return messages\n\ndef run(agent_run: AgentRunInput, *args, **kwargs):\n    logger.info(f"Running with inputs {agent_run.inputs.tool_input_data}")\n\n    simple_chat_agent = SimpleChatAgent(agent_run.agent_deployment)\n\n    method = getattr(simple_chat_agent, agent_run.inputs.tool_name, None)\n\n    return method(agent_run.inputs)\n\n\nif __name__ == "__main__":\n    from naptha_sdk.client.naptha import Naptha\n    from naptha_sdk.configs import load_agent_deployments\n\n    naptha = Naptha()\n\n    # Configs\n    agent_deployments = load_agent_deployments("simple_chat_agent/configs/agent_deployments.json")\n\n    input_params = InputSchema(\n        tool_name="chat",\n        tool_input_data=[{"role": "user", "content": "tell me a joke"}],\n    )\n\n    agent_run = AgentRunInput(\n        inputs=input_params,\n        agent_deployment=agent_deployments[0],\n        consumer_id=naptha.user.id,\n    )\n\n    response = run(agent_run)\n'})}),"\n",(0,i.jsxs)(n.p,{children:["Don't forget to update your ",(0,i.jsx)(n.code,{children:"pyproject.toml"})," with your agent's details:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-toml",children:'[tool.poetry]\nname = "my-first-agent"\nversion = "0.1.0"\ndescription = "My first Naptha agent"\nauthors = ["Your Name <your.email@example.com>"]\n'})}),"\n",(0,i.jsx)(n.h2,{id:"testing",children:"Testing"}),"\n",(0,i.jsx)(n.p,{children:"To test your code locally, run:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"poetry run python my-first-agent/run.py\n"})}),"\n",(0,i.jsxs)(n.p,{children:["If you're interested in testing your agent module on a local node, please follow the instructions ",(0,i.jsx)(n.a,{href:"https://github.com/NapthaAI/node?tab=readme-ov-file",children:"here"})]}),"\n",(0,i.jsx)(n.h2,{id:"packaging-your-agent",children:"Packaging Your Agent"}),"\n",(0,i.jsx)(n.p,{children:"Once your agent is ready, it's time to package it with Poetry by running:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"poetry build\n"})}),"\n",(0,i.jsxs)(n.p,{children:["This creates distribution files in your ",(0,i.jsx)(n.code,{children:"dist"})," directory."]}),"\n",(0,i.jsx)(n.h2,{id:"publishing-to-naptha-hub",children:"Publishing to Naptha Hub"}),"\n",(0,i.jsx)(n.p,{children:"Publishing involves two key steps:"}),"\n",(0,i.jsxs)(n.admonition,{type:"tip",children:[(0,i.jsx)(n.p,{children:"Add versioning before pushing to either Github or IPFS or Both."}),(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Add version tag\ngit tag v0.1.0\ngit push --tags\n"})})]}),"\n",(0,i.jsx)(n.h3,{id:"1-upload-to-ipfs",children:"1. Upload to IPFS"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"naptha write_storage -i dist/my-first-agent-0.1.0.tar.gz --ipfs\n"})}),"\n",(0,i.jsxs)(n.p,{children:["You'll receive an IPFS ",(0,i.jsx)(n.code,{children:"Folder ID"})," upon success like:"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"Writing storage\n{'message': 'Files written to storage', 'folder_id': '********************************'}\n"})}),"\n",(0,i.jsxs)(n.admonition,{type:"info",children:[(0,i.jsx)(n.mdxAdmonitionTitle,{}),(0,i.jsxs)(n.p,{children:["Save the returned IPFS ",(0,i.jsx)(n.code,{children:"Folder ID"})," - you'll need it for registration."]})]}),"\n",(0,i.jsxs)(n.admonition,{type:"note",children:[(0,i.jsxs)(n.p,{children:["If you would like to use ",(0,i.jsx)(n.code,{children:"Github"})," instead, replace the ",(0,i.jsx)(n.code,{children:"url"})," value in the ",(0,i.jsx)(n.em,{children:"register agent"})," command with your repository url. Remember to:"]}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"git add and commit your files"}),"\n",(0,i.jsx)(n.li,{children:"create a new repository on Github and push your code."}),"\n"]})]}),"\n",(0,i.jsx)(n.h3,{id:"2-register-your-agent",children:"2. Register Your Agent"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"naptha agents my-first-agent -p \"description='My first Naptha agent' parameters='{tool_name: str, tool_input_data: str}' url='ipfs://YOUR_FOLDER_ID' type='package' version='0.1'\"\n"})}),"\n",(0,i.jsx)(n.h2,{id:"verifying-your-publication",children:"Verifying Your Publication"}),"\n",(0,i.jsx)(n.p,{children:"To ensure your agent is properly registered, run:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"naptha agents\n"})}),"\n",(0,i.jsx)(n.p,{children:"Look for your agent in the listing."}),"\n",(0,i.jsx)(n.p,{children:"Voila! Others can now use your agent like depending on the input schema you defined. For example:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"naptha run agent:my-first-agent -p \"input_data='Hello, Naptha!'\"\n"})}),"\n",(0,i.jsx)(n.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Documentation: Include clear documentation in your README.md"}),"\n",(0,i.jsx)(n.li,{children:"Version Control: Use semantic versioning for releases"}),"\n",(0,i.jsx)(n.li,{children:"Dependencies: Keep dependencies minimal and well-defined"}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"next-steps",children:"Next Steps"}),"\n",(0,i.jsx)(n.p,{children:"Congratulations! You've created and published your first Naptha agent module. Remember to version your agent appropriately when making updates!"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Join our ",(0,i.jsx)(n.a,{href:"https://naptha.ai/community",children:"Discord Community"})]}),"\n",(0,i.jsxs)(n.li,{children:["Follow us on ",(0,i.jsx)(n.a,{href:"https://twitter.com/NapthaAI",children:"Twitter"})]}),"\n",(0,i.jsxs)(n.li,{children:["Star us on ",(0,i.jsx)(n.a,{href:"https://github.com/NapthaAI",children:"GitHub"})]}),"\n",(0,i.jsxs)(n.li,{children:["Get help with bug reports, feature requests, and technical discussions - ",(0,i.jsx)(n.a,{href:"https://github.com/NapthaAI/naptha-sdk/issues",children:"GitHub Issues"})]}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>l});var i=t(6540);const a={},s=i.createContext(a);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);